@inherits LayoutComponentBase
<MudThemeProvider Theme="MyCustomTheme" @ref="_mudThemeProvider" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Color="Color.Primary" Fixed="false" Dense="true" Elevation="20">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Tomato</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Rounded.SupervisedUserCircle" Color="Color.Inherit" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        @*NavMenu*@
    </MudDrawer>
    <MudMainContent>
        @*Body*@
    </MudMainContent>
</MudLayout>
@code {
    bool _drawerOpen = true;
    private bool _isDarkMode = false;
    void ToggleDarkMode()
    {
        _isDarkMode = !_isDarkMode;
    }
    private MudThemeProvider _mudThemeProvider;
   
    MudTheme MyCustomTheme => new MudTheme()
    {
        PaletteLight = new PaletteLight() { Primary = "#bc4b51ff", Secondary = "#8cb369ff", AppbarBackground = "#f4a259ff", Background = "#5b8e7dff" },
        PaletteDark = new PaletteDark() { Primary = "#bc4b51ff", Secondary = "#8cb369ff", AppbarBackground = "#f4a259ff", Background = "#B1B0B5" },
        LayoutProperties = new LayoutProperties() { DrawerWidthLeft = "260px", DrawerWidthRight = "300px" }
    };

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}