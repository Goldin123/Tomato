@using MudBlazor
<div class="page-container">
    @if (!string.IsNullOrEmpty(Title))
    {
        <MudPaper Elevation="2">
            <MudStack Spacing="0">
                @if (_breadcrumbs?.Count > 1)
                {
                    <MudBreadcrumbs Items="@_breadcrumbs" SeparatorIcon="@Icons.Material.Filled.ChevronRight" />
                }
                @if (ChildHeader != null)
                {
                    <div class="mt-1">@ChildHeader</div>
                }
            </MudStack>
        </MudPaper>
    }

    <MudPaper Class="page-content p-4 mt-3" Elevation="0">
        @ChildContent
        @if (ShowFooter)
        {
            <div class="d-flex justify-end gap-2 mt-4">
                @if (OnCancel.HasDelegate)
                {
                    <MudButton Variant="Variant.Outlined" OnClick="OnCancel">Cancel</MudButton>
                }
                @if (OnSubmit.HasDelegate)
                {
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="OnSubmit">Submit</MudButton>
                }
            </div>
        }
    </MudPaper>
</div>

@code {
    [CascadingParameter] public Action<string> SetPageTitle { get; set; }

    [Parameter] public string Title { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public RenderFragment ChildHeader { get; set; }

    [Parameter] public bool ShowFooter { get; set; }
    [Parameter] public EventCallback OnSubmit { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private List<BreadcrumbItem> _breadcrumbs;

    protected override void OnParametersSet()
    {
        if (!string.IsNullOrEmpty(Title))
        {
            SetPageTitle?.Invoke(Title);
            _breadcrumbs = new() {
                new BreadcrumbItem("Home", href: "/home"),
                new BreadcrumbItem(Title, href: null, disabled: true)
            };
        }
        else
        {
            _breadcrumbs = null;
        }
    }
}
